[{"C:\\Users\\dthom\\Documents\\ucf\\Projects\\git-hire\\git-hire\\client\\src\\index.js":"1","C:\\Users\\dthom\\Documents\\ucf\\Projects\\git-hire\\git-hire\\client\\src\\App.js":"2","C:\\Users\\dthom\\Documents\\ucf\\Projects\\git-hire\\git-hire\\client\\src\\Components\\Navbar\\Navbar.js":"3","C:\\Users\\dthom\\Documents\\ucf\\Projects\\git-hire\\git-hire\\client\\src\\Components\\HomePage\\HomePage.js":"4","C:\\Users\\dthom\\Documents\\ucf\\Projects\\git-hire\\git-hire\\client\\src\\Components\\pages\\Form.js":"5","C:\\Users\\dthom\\Documents\\ucf\\Projects\\git-hire\\git-hire\\client\\src\\Components\\JobSearch\\JobSearch.js":"6","C:\\Users\\dthom\\Documents\\ucf\\Projects\\git-hire\\git-hire\\client\\src\\Components\\UserProfile\\UserProfile.js":"7","C:\\Users\\dthom\\Documents\\ucf\\Projects\\git-hire\\git-hire\\client\\src\\Components\\Button\\Button.js":"8","C:\\Users\\dthom\\Documents\\ucf\\Projects\\git-hire\\git-hire\\client\\src\\Components\\UserProfile\\JobList.js":"9","C:\\Users\\dthom\\Documents\\ucf\\Projects\\git-hire\\git-hire\\client\\src\\utils\\actions.js":"10"},{"size":211,"mtime":1630431795176,"results":"11","hashOfConfig":"12"},{"size":892,"mtime":1630678439243,"results":"13","hashOfConfig":"12"},{"size":2463,"mtime":1630635795571,"results":"14","hashOfConfig":"12"},{"size":1974,"mtime":1630679336193,"results":"15","hashOfConfig":"12"},{"size":5734,"mtime":1630684098082,"results":"16","hashOfConfig":"12"},{"size":1154,"mtime":1630683914491,"results":"17","hashOfConfig":"12"},{"size":1086,"mtime":1630637790430,"results":"18","hashOfConfig":"12"},{"size":863,"mtime":1630633845531,"results":"19","hashOfConfig":"12"},{"size":5902,"mtime":1630635802259,"results":"20","hashOfConfig":"12"},{"size":78,"mtime":1630635802260,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"wr02p6",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\dthom\\Documents\\ucf\\Projects\\git-hire\\git-hire\\client\\src\\index.js",[],["47","48"],"C:\\Users\\dthom\\Documents\\ucf\\Projects\\git-hire\\git-hire\\client\\src\\App.js",["49"],"import React from 'react';\r\nimport './App.css';\r\nimport HomePage from './Components/HomePage/HomePage';\r\nimport UserProfile from './Components/UserProfile/UserProfile';\r\nimport Navbar from './Components/Navbar/Navbar';\r\nimport Form from './Components/pages/Form';\r\nimport JobSearch from './Components/JobSearch/JobSearch';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport route from 'color-convert/route';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path='/' exact component={HomePage}/>\r\n          <Route path='/UserProfile' component={UserProfile}/>\r\n          <Route path='/Form' component={Form} />\r\n          <Route path='/JobSearch' component={JobSearch}/>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\dthom\\Documents\\ucf\\Projects\\git-hire\\git-hire\\client\\src\\Components\\Navbar\\Navbar.js",[],"C:\\Users\\dthom\\Documents\\ucf\\Projects\\git-hire\\git-hire\\client\\src\\Components\\HomePage\\HomePage.js",["50","51"],"import React from \"react\";\r\nimport \"./HomePage.css\";\r\nimport \"../../App.css\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div class=\"HomePage pusher\">\r\n      <div class=\"ui inverted vertical masthead center aligned segment\">\r\n        <div class=\"ui text container\">\r\n          <h1 class=\"ui inverted header\">Git Hire</h1>\r\n          <h2>Lets Git You Working!</h2>\r\n          <div class=\"ui huge primary button \">\r\n            <Link to='/JobSearch' className='view-jobs'>View our Jobs <i class=\"globe icon\"></i>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"ui vertical stripe segment\">\r\n        <div class=\"ui middle aligned stackable grid container\">\r\n          <div class=\"row\">\r\n            <div class=\"eight wide column\">\r\n              <h3 class=\"ui header\">We Help Find a Job for You! </h3>\r\n              <p>\r\n                We developed this site to help you find work. With Git hire\r\n                there are no paywalls or other requirements to use our\r\n                application, just sign in and Git Searching!{\" \"}\r\n              </p>\r\n              <h3 class=\"ui header\">We Make Applying Easier!</h3>\r\n              <p>\r\n                {\" \"}\r\n                We have taken time to create a simple and easy way to search and\r\n                apply for jobs.{\" \"}\r\n              </p>\r\n            </div>\r\n            <div class=\"six wide right floated column\">\r\n              <img class=\"ui fluid image\" src=\"./business-people-group.jpeg\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"center aligned column\">\r\n              <a class=\"ui huge button\">\r\n                <Link to='/Form' className='git-started'>Git Started<i class=\"chevron circle right icon\"></i>\r\n                </Link>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","C:\\Users\\dthom\\Documents\\ucf\\Projects\\git-hire\\git-hire\\client\\src\\Components\\pages\\Form.js",["52","53","54","55","56"],"C:\\Users\\dthom\\Documents\\ucf\\Projects\\git-hire\\git-hire\\client\\src\\Components\\JobSearch\\JobSearch.js",[],"C:\\Users\\dthom\\Documents\\ucf\\Projects\\git-hire\\git-hire\\client\\src\\Components\\UserProfile\\UserProfile.js",["57"],"import React from 'react';\r\nimport './UserProfile.css';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport Calendar from 'react-calendar'\r\nimport JobList from './JobList';\r\nimport '../../App.css';\r\n\r\nfunction UserProfile() {\r\n\r\n    return (\r\n        <div className=\"UserProfile\">\r\n           <div className=\"container-fluid\">\r\n                <div className=\"row justify-content-between\">\r\n                    <div className=\"col-md-4 col-sm-12 \" align=\"center\" style={{background:\"blue\"}}>\r\n                        <h2>Profile</h2>\r\n                    </div>\r\n                    <div className=\"col-md-8 col-sm-12 \" align=\"center\" style={{background:\"red\"}}>\r\n                        <Calendar />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\" align=\"center\" style={{background:\"purple\"}}>\r\n                        {/* <JobList/> */}\r\n                    </div>\r\n                    \r\n                </div>\r\n           </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default UserProfile;\r\n","C:\\Users\\dthom\\Documents\\ucf\\Projects\\git-hire\\git-hire\\client\\src\\Components\\Button\\Button.js",[],"C:\\Users\\dthom\\Documents\\ucf\\Projects\\git-hire\\git-hire\\client\\src\\Components\\UserProfile\\JobList.js",["58"],"import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_JOB, REMOVE_JOB } from '../../utils/actions';\r\n\r\nfunction JobList() {\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state) => state);\r\n\r\n    const [newJobTitle, setNewJobTitle] = useState('');\r\n    const [newJobCompany, setNewJobCompany] = useState('');\r\n    const [newJobSalary, setNewJobSalary] = useState('');\r\n    const [newJobDate, setNewJobDate] = useState('');\r\n\r\n    return (\r\n        <div className=\"UserJobs\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row justify-content-between\">\r\n                    <div align=\"center\" style={{ background: \"blue\" }}>\r\n                        <section className=\"\">\r\n                            <div>\r\n                                <div className=\"\">\r\n                                    Add a job:\r\n                                    <input\r\n                                        defaultValue={newJobTitle}\r\n                                        onChange={(event) => setNewJobTitle(event.target.value)}\r\n                                        placeholder=\"New job title...\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                    <input\r\n                                        defaultValue={newJobCompany}\r\n                                        onChange={(event) => setNewJobCompany(event.target.value)}\r\n                                        placeholder=\"Job's company name...\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                    <input\r\n                                        defaultValue={newJobSalary}\r\n                                        onChange={(event) => setNewJobSalary(event.target.value)}\r\n                                        placeholder=\"Job's Salary...\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                    <input\r\n                                        defaultValue={newJobDate}\r\n                                        onChange={(event) => setNewJobDate(event.target.value)}\r\n                                        placeholder=\"Posted on...\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                    <button\r\n                                        onClick={() =>\r\n                                            dispatch({\r\n                                                type: ADD_JOB,\r\n                                                payload: {\r\n                                                    title: newJobTitle,\r\n                                                    company: newJobCompany,\r\n                                                    salary: newJobSalary,\r\n                                                    postedOn: newJobDate,\r\n                                                },\r\n                                            })\r\n                                        }\r\n                                    >\r\n                                        Add Car\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                        <section className=\"car-list\">\r\n                            {console.log(state)}\r\n                            {state.cars.map((job) => (\r\n                                <div key={job.id} id={job.id} className=\"\">\r\n                                    <h4 className=\"card-header bg-primary text-light p-2 m-0\">\r\n                                        {job.title} <br />\r\n                                        <span style={{ fontSize: '1rem' }}>\r\n                                            {job.company}\r\n                                        </span>\r\n                                    </h4>\r\n                                    <div className=\"card-body bg-light p-2\">\r\n                                        <p>${job.salary}/y</p>\r\n                                        <code>\r\n                                            Job ID:\r\n                                            {job.id}\r\n                                        </code>\r\n                                    </div>\r\n                                    <div className=\"card-body bg-light p-2\">\r\n                                        <p>{job.postedOn}</p>\r\n                                        <code>\r\n                                            Job ID:\r\n                                            {job.id}\r\n                                        </code>\r\n                                    </div>\r\n                                    {/* <span style={{ fontSize: '1rem' }}>\r\n                                        {car.isRunning ? 'Car is running 🏎️' : 'Car is off 💤'}\r\n                                        <button\r\n                                            id=\"turnOn\"\r\n                                            onClick={\r\n                                                !car.isRunning\r\n                                                    ? () => dispatch({ type: START_CAR, payload: car.id })\r\n                                                    : () => dispatch({ type: STOP_CAR, payload: car.id })\r\n                                            }\r\n                                        >\r\n                                            Toggle Engine\r\n                                        </button>\r\n                                    </span> */}\r\n                                </div>\r\n                            ))}\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JobList;","C:\\Users\\dthom\\Documents\\ucf\\Projects\\git-hire\\git-hire\\client\\src\\utils\\actions.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":10,"column":8,"nodeType":"65","messageId":"66","endLine":10,"endColumn":13},{"ruleId":"67","severity":1,"message":"68","line":37,"column":15,"nodeType":"69","endLine":37,"endColumn":80},{"ruleId":"70","severity":1,"message":"71","line":42,"column":15,"nodeType":"69","endLine":42,"endColumn":41},{"ruleId":"63","severity":1,"message":"72","line":8,"column":12,"nodeType":"65","messageId":"66","endLine":8,"endColumn":23},{"ruleId":"63","severity":1,"message":"73","line":9,"column":12,"nodeType":"65","messageId":"66","endLine":9,"endColumn":20},{"ruleId":"63","severity":1,"message":"74","line":10,"column":12,"nodeType":"65","messageId":"66","endLine":10,"endColumn":23},{"ruleId":"70","severity":1,"message":"75","line":38,"column":33,"nodeType":"69","endLine":38,"endColumn":69},{"ruleId":"70","severity":1,"message":"75","line":56,"column":33,"nodeType":"69","endLine":56,"endColumn":69},{"ruleId":"63","severity":1,"message":"76","line":5,"column":8,"nodeType":"65","messageId":"66","endLine":5,"endColumn":15},{"ruleId":"63","severity":1,"message":"77","line":3,"column":19,"nodeType":"65","messageId":"66","endLine":3,"endColumn":29},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'route' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'fullNameReg' is assigned a value but never used.","'emailReg' is assigned a value but never used.","'passwordReg' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'JobList' is defined but never used.","'REMOVE_JOB' is defined but never used.","no-global-assign","no-unsafe-negation"]