{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\UCF\\\\Projects\\\\git-hire\\\\client\\\\src\\\\Components\\\\JobList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_JOB, REMOVE_JOB } from '../utils/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction JobList() {\n  _s();\n\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const [newJobTitle, setNewJobTitle] = useState('');\n  const [newJobCompany, setNewJobCompany] = useState('');\n  const [newJobSalary, setNewJobSalary] = useState('');\n  const [newJobDate, setNewJobDate] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"UserJobs\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-between\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          align: \"center\",\n          style: {\n            background: \"blue\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"\",\n                children: [\"Add a job:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  defaultValue: newJobTitle,\n                  onChange: event => setNewJobTitle(event.target.value),\n                  placeholder: \"New job title...\",\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 23,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  defaultValue: newJobCompany,\n                  onChange: event => setNewJobCompany(event.target.value),\n                  placeholder: \"Job's company name...\",\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  defaultValue: newJobSalary,\n                  onChange: event => setNewJobSalary(event.target.value),\n                  placeholder: \"Job's Salary...\",\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  defaultValue: newJobDate,\n                  onChange: event => setNewJobDate(event.target.value),\n                  placeholder: \"Posted on...\",\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => dispatch({\n                    type: ADD_JOB,\n                    payload: {\n                      title: newJobTitle,\n                      company: newJobCompany,\n                      salary: newJobSalary,\n                      postedOn: newJobDate\n                    }\n                  }),\n                  children: \"Add Car\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"car-list\",\n            children: [console.log(state), state.cars.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n              id: job.id,\n              className: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-header bg-primary text-light p-2 m-0\",\n                children: [job.title, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: '1rem'\n                  },\n                  children: job.company\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body bg-light p-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"$\", job.salary, \"/y\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: [\"Job ID:\", job.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body bg-light p-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: job.postedOn\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: [\"Job ID:\", job.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this)]\n            }, job.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(JobList, \"ctCqbGitjPe0stGaikNOQE9fOGg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = JobList;\nexport default JobList;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"sources":["C:/Users/andre/Desktop/UCF/Projects/git-hire/client/src/Components/JobList.js"],"names":["React","useState","useDispatch","useSelector","ADD_JOB","REMOVE_JOB","JobList","dispatch","state","newJobTitle","setNewJobTitle","newJobCompany","setNewJobCompany","newJobSalary","setNewJobSalary","newJobDate","setNewJobDate","background","event","target","value","type","payload","title","company","salary","postedOn","console","log","cars","map","job","id","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_JOB, REMOVE_JOB } from '../utils/actions';\r\n\r\nfunction JobList() {\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state) => state);\r\n\r\n    const [newJobTitle, setNewJobTitle] = useState('');\r\n    const [newJobCompany, setNewJobCompany] = useState('');\r\n    const [newJobSalary, setNewJobSalary] = useState('');\r\n    const [newJobDate, setNewJobDate] = useState('');\r\n\r\n    return (\r\n        <div className=\"UserJobs\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row justify-content-between\">\r\n                    <div align=\"center\" style={{ background: \"blue\" }}>\r\n                        <section className=\"\">\r\n                            <div>\r\n                                <div className=\"\">\r\n                                    Add a job:\r\n                                    <input\r\n                                        defaultValue={newJobTitle}\r\n                                        onChange={(event) => setNewJobTitle(event.target.value)}\r\n                                        placeholder=\"New job title...\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                    <input\r\n                                        defaultValue={newJobCompany}\r\n                                        onChange={(event) => setNewJobCompany(event.target.value)}\r\n                                        placeholder=\"Job's company name...\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                    <input\r\n                                        defaultValue={newJobSalary}\r\n                                        onChange={(event) => setNewJobSalary(event.target.value)}\r\n                                        placeholder=\"Job's Salary...\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                    <input\r\n                                        defaultValue={newJobDate}\r\n                                        onChange={(event) => setNewJobDate(event.target.value)}\r\n                                        placeholder=\"Posted on...\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                    <button\r\n                                        onClick={() =>\r\n                                            dispatch({\r\n                                                type: ADD_JOB,\r\n                                                payload: {\r\n                                                    title: newJobTitle,\r\n                                                    company: newJobCompany,\r\n                                                    salary: newJobSalary,\r\n                                                    postedOn: newJobDate,\r\n                                                },\r\n                                            })\r\n                                        }\r\n                                    >\r\n                                        Add Car\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                        <section className=\"car-list\">\r\n                            {console.log(state)}\r\n                            {state.cars.map((job) => (\r\n                                <div key={job.id} id={job.id} className=\"\">\r\n                                    <h4 className=\"card-header bg-primary text-light p-2 m-0\">\r\n                                        {job.title} <br />\r\n                                        <span style={{ fontSize: '1rem' }}>\r\n                                            {job.company}\r\n                                        </span>\r\n                                    </h4>\r\n                                    <div className=\"card-body bg-light p-2\">\r\n                                        <p>${job.salary}/y</p>\r\n                                        <code>\r\n                                            Job ID:\r\n                                            {job.id}\r\n                                        </code>\r\n                                    </div>\r\n                                    <div className=\"card-body bg-light p-2\">\r\n                                        <p>{job.postedOn}</p>\r\n                                        <code>\r\n                                            Job ID:\r\n                                            {job.id}\r\n                                        </code>\r\n                                    </div>\r\n                                    {/* <span style={{ fontSize: '1rem' }}>\r\n                                        {car.isRunning ? 'Car is running 🏎️' : 'Car is off 💤'}\r\n                                        <button\r\n                                            id=\"turnOn\"\r\n                                            onClick={\r\n                                                !car.isRunning\r\n                                                    ? () => dispatch({ type: START_CAR, payload: car.id })\r\n                                                    : () => dispatch({ type: STOP_CAR, payload: car.id })\r\n                                            }\r\n                                        >\r\n                                            Toggle Engine\r\n                                        </button>\r\n                                    </span> */}\r\n                                </div>\r\n                            ))}\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JobList;"]},"metadata":{},"sourceType":"module"}