[{"C:\\Users\\andre\\Desktop\\UCF\\Projects\\git-hire\\client\\src\\index.js":"1","C:\\Users\\andre\\Desktop\\UCF\\Projects\\git-hire\\client\\src\\App.js":"2","C:\\Users\\andre\\Desktop\\UCF\\Projects\\git-hire\\client\\src\\Components\\Navbar\\Navbar.js":"3","C:\\Users\\andre\\Desktop\\UCF\\Projects\\git-hire\\client\\src\\Components\\pages\\Form.js":"4","C:\\Users\\andre\\Desktop\\UCF\\Projects\\git-hire\\client\\src\\Components\\JobSearch\\JobSearch.js":"5","C:\\Users\\andre\\Desktop\\UCF\\Projects\\git-hire\\client\\src\\Components\\HomePage\\HomePage.js":"6","C:\\Users\\andre\\Desktop\\UCF\\Projects\\git-hire\\client\\src\\Components\\Button\\Button.js":"7","C:\\Users\\andre\\Desktop\\UCF\\Projects\\git-hire\\client\\src\\Components\\UserProfile\\UserProfile.js":"8","C:\\Users\\andre\\Desktop\\UCF\\Projects\\git-hire\\client\\src\\Components\\UserProfile\\JobList.js":"9","C:\\Users\\andre\\Desktop\\UCF\\Projects\\git-hire\\client\\src\\utils\\actions.js":"10"},{"size":199,"mtime":1630636408507,"results":"11","hashOfConfig":"12"},{"size":818,"mtime":1630637782166,"results":"13","hashOfConfig":"12"},{"size":2394,"mtime":1630636408493,"results":"14","hashOfConfig":"12"},{"size":2374,"mtime":1630636408498,"results":"15","hashOfConfig":"12"},{"size":230,"mtime":1630636408491,"results":"16","hashOfConfig":"12"},{"size":1749,"mtime":1630636408490,"results":"17","hashOfConfig":"12"},{"size":841,"mtime":1630636408488,"results":"18","hashOfConfig":"12"},{"size":1001,"mtime":1630636408496,"results":"19","hashOfConfig":"12"},{"size":5791,"mtime":1630636408495,"results":"20","hashOfConfig":"12"},{"size":75,"mtime":1630636408509,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u5ntwp",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\andre\\Desktop\\UCF\\Projects\\git-hire\\client\\src\\index.js",[],"C:\\Users\\andre\\Desktop\\UCF\\Projects\\git-hire\\client\\src\\App.js",["47"],"import React from 'react';\nimport './App.css';\nimport UserProfile from './Components/UserProfile/UserProfile'\nimport HomePage from './Components/HomePage/HomePage';\nimport Navbar from './Components/Navbar/Navbar';\nimport Form from './Components/pages/Form';\nimport JobSearch from './Components/JobSearch/JobSearch';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport route from 'color-convert/route';\n\n\n\nfunction App() {\n  return (\n\n    <>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path='/' exact component={HomePage}/>\n          <Route path='/Form' component={Form} />\n          <Route path='/UserProfile' component={UserProfile}/>\n          <Route path='/JobSearch' component={JobSearch}/>\n        </Switch>\n      </Router>\n    </>\n\n  );\n}\n\nexport default App;\n","C:\\Users\\andre\\Desktop\\UCF\\Projects\\git-hire\\client\\src\\Components\\Navbar\\Navbar.js",[],"C:\\Users\\andre\\Desktop\\UCF\\Projects\\git-hire\\client\\src\\Components\\pages\\Form.js",["48","49","50"],"import React, {useState} from 'react';\nimport '../../App.css';\nimport '../pages/Form.css';\n\n\nfunction Form() {\n\n    const [fullNameReg, setFullNameReg] = useState('')\n    const [emailReg, setEmailReg] = useState('')\n    const [passwordReg, setPasswordReg] = useState('')\n\n    return (\n        <div className='Form'>\n            <div className='form-container'>\n                <div className='signup'>\n                    <h1>Sign up</h1>\n                    <div className='form-input'>\n                        <label htmlFor='name' className='form-label'>Full Name:</label>\n                        <input type='text' name='name' placeholder='Enter full name' onChange={(e) => {\n                            setFullNameReg(e.target.value);\n                        }}/>\n                    </div>\n                    <div className='form-input'>\n                        <label htmlFor='email' className='form-label'>Email:</label>\n                        <input type='email' name='email' placeholder='Enter your email' onChange={(e) => {\n                            setEmailReg(e.target.value);\n                        }}/>\n                    </div>\n                    <div className='form-input'>\n                        <label htmlFor='password' className='form-label'>Password:</label>\n                        <input type='password' name='password' placeholder='Enter A Password' onChange={(e) => {\n                            setPasswordReg(e.target.value);\n                        }}/>\n                    </div>\n                    <button className='form-btn'>Sign up</button>           \n                </div>\n                <div className='login'>\n                    <h1>Login</h1>\n                    <div className='form-input'>\n                        <label htmlFor='email' className='form-label'>Email:</label>\n                        <input type='email' name='email' placeholder='Enter your email'/>\n                    </div>\n                    <div className='form-input'>\n                        <label htmlFor='password' className='form-label'>Password:</label>\n                        <input type='password' name='password' placeholder='Enter your Password'/>\n                    </div>\n                    <button className='form-btn'>Login</button>\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Form\n","C:\\Users\\andre\\Desktop\\UCF\\Projects\\git-hire\\client\\src\\Components\\JobSearch\\JobSearch.js",[],"C:\\Users\\andre\\Desktop\\UCF\\Projects\\git-hire\\client\\src\\Components\\HomePage\\HomePage.js",["51","52"],"import React from \"react\";\nimport \"./HomePage.css\";\nimport \"../../App.css\";\n\nfunction HomePage() {\n  return (\n    <div class=\"HomePage pusher\">\n      <div class=\"ui inverted vertical masthead center aligned segment\">\n        <div class=\"ui text container\">\n          <h1 class=\"ui inverted header\">Git Hire</h1>\n          <h2>Lets Git You Working!</h2>\n          <div class=\"ui huge primary button\">\n            View our Jobs <i class=\"globe icon\"></i>\n          </div>\n        </div>\n      </div>\n      <div class=\"ui vertical stripe segment\">\n        <div class=\"ui middle aligned stackable grid container\">\n          <div class=\"row\">\n            <div class=\"eight wide column\">\n              <h3 class=\"ui header\">We Help Find a Job for You! </h3>\n              <p>\n                We developed this site to help you find work. With Git hire\n                there are no paywalls or other requirements to use our\n                application, just sign in and Git Searching!{\" \"}\n              </p>\n              <h3 class=\"ui header\">We Make Applying Easier!</h3>\n              <p>\n                {\" \"}\n                We have taken time to create a simple and easy way to search and\n                apply for jobs.{\" \"}\n              </p>\n            </div>\n            <div class=\"six wide right floated column\">\n              <img class=\"ui fluid image\" src=\"./business-people-group.jpeg\" />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"center aligned column\">\n              <a class=\"ui huge button\">\n                Git Started<i class=\"chevron circle right icon\"></i>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n","C:\\Users\\andre\\Desktop\\UCF\\Projects\\git-hire\\client\\src\\Components\\Button\\Button.js",[],"C:\\Users\\andre\\Desktop\\UCF\\Projects\\git-hire\\client\\src\\Components\\UserProfile\\UserProfile.js",["53"],"import './UserProfile.css';\nimport 'react-calendar/dist/Calendar.css';\nimport Calendar from 'react-calendar'\nimport JobList from './JobList';\n\nfunction UserProfile() {\n\n    return (\n        <div className=\"UserProfile\">\n           <div className=\"container-fluid\">\n                <div className=\"row justify-content-between\">\n                    <div className=\"col-md-4 col-sm-12 \" align=\"center\" style={{background:\"blue\"}}>\n                        <h2>Profile</h2>\n                    </div>\n                    <div className=\"col-md-8 col-sm-12 \" align=\"center\" style={{background:\"red\"}}>\n                        <Calendar />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-12\" align=\"center\" style={{background:\"purple\"}}>\n                        {/* <JobList/> */}\n                    </div>\n                    \n                </div>\n           </div>\n        </div>\n    );\n}\n\n\n\nexport default UserProfile;\n","C:\\Users\\andre\\Desktop\\UCF\\Projects\\git-hire\\client\\src\\Components\\UserProfile\\JobList.js",["54"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_JOB, REMOVE_JOB } from '../../utils/actions';\n\nfunction JobList() {\n    const dispatch = useDispatch();\n    const state = useSelector((state) => state);\n\n    const [newJobTitle, setNewJobTitle] = useState('');\n    const [newJobCompany, setNewJobCompany] = useState('');\n    const [newJobSalary, setNewJobSalary] = useState('');\n    const [newJobDate, setNewJobDate] = useState('');\n\n    return (\n        <div className=\"UserJobs\">\n            <div className=\"container-fluid\">\n                <div className=\"row justify-content-between\">\n                    <div align=\"center\" style={{ background: \"blue\" }}>\n                        <section className=\"\">\n                            <div>\n                                <div className=\"\">\n                                    Add a job:\n                                    <input\n                                        defaultValue={newJobTitle}\n                                        onChange={(event) => setNewJobTitle(event.target.value)}\n                                        placeholder=\"New job title...\"\n                                        type=\"text\"\n                                    />\n                                    <input\n                                        defaultValue={newJobCompany}\n                                        onChange={(event) => setNewJobCompany(event.target.value)}\n                                        placeholder=\"Job's company name...\"\n                                        type=\"text\"\n                                    />\n                                    <input\n                                        defaultValue={newJobSalary}\n                                        onChange={(event) => setNewJobSalary(event.target.value)}\n                                        placeholder=\"Job's Salary...\"\n                                        type=\"text\"\n                                    />\n                                    <input\n                                        defaultValue={newJobDate}\n                                        onChange={(event) => setNewJobDate(event.target.value)}\n                                        placeholder=\"Posted on...\"\n                                        type=\"text\"\n                                    />\n                                    <button\n                                        onClick={() =>\n                                            dispatch({\n                                                type: ADD_JOB,\n                                                payload: {\n                                                    title: newJobTitle,\n                                                    company: newJobCompany,\n                                                    salary: newJobSalary,\n                                                    postedOn: newJobDate,\n                                                },\n                                            })\n                                        }\n                                    >\n                                        Add Car\n                                    </button>\n                                </div>\n                            </div>\n                        </section>\n                        <section className=\"car-list\">\n                            {console.log(state)}\n                            {state.cars.map((job) => (\n                                <div key={job.id} id={job.id} className=\"\">\n                                    <h4 className=\"card-header bg-primary text-light p-2 m-0\">\n                                        {job.title} <br />\n                                        <span style={{ fontSize: '1rem' }}>\n                                            {job.company}\n                                        </span>\n                                    </h4>\n                                    <div className=\"card-body bg-light p-2\">\n                                        <p>${job.salary}/y</p>\n                                        <code>\n                                            Job ID:\n                                            {job.id}\n                                        </code>\n                                    </div>\n                                    <div className=\"card-body bg-light p-2\">\n                                        <p>{job.postedOn}</p>\n                                        <code>\n                                            Job ID:\n                                            {job.id}\n                                        </code>\n                                    </div>\n                                    {/* <span style={{ fontSize: '1rem' }}>\n                                        {car.isRunning ? 'Car is running 🏎️' : 'Car is off 💤'}\n                                        <button\n                                            id=\"turnOn\"\n                                            onClick={\n                                                !car.isRunning\n                                                    ? () => dispatch({ type: START_CAR, payload: car.id })\n                                                    : () => dispatch({ type: STOP_CAR, payload: car.id })\n                                            }\n                                        >\n                                            Toggle Engine\n                                        </button>\n                                    </span> */}\n                                </div>\n                            ))}\n                        </section>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default JobList;","C:\\Users\\andre\\Desktop\\UCF\\Projects\\git-hire\\client\\src\\utils\\actions.js",[],{"ruleId":"55","severity":1,"message":"56","line":9,"column":8,"nodeType":"57","messageId":"58","endLine":9,"endColumn":13},{"ruleId":"55","severity":1,"message":"59","line":8,"column":12,"nodeType":"57","messageId":"58","endLine":8,"endColumn":23},{"ruleId":"55","severity":1,"message":"60","line":9,"column":12,"nodeType":"57","messageId":"58","endLine":9,"endColumn":20},{"ruleId":"55","severity":1,"message":"61","line":10,"column":12,"nodeType":"57","messageId":"58","endLine":10,"endColumn":23},{"ruleId":"62","severity":1,"message":"63","line":35,"column":15,"nodeType":"64","endLine":35,"endColumn":80},{"ruleId":"65","severity":1,"message":"66","line":40,"column":15,"nodeType":"64","endLine":40,"endColumn":41},{"ruleId":"55","severity":1,"message":"67","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":15},{"ruleId":"55","severity":1,"message":"68","line":3,"column":19,"nodeType":"57","messageId":"58","endLine":3,"endColumn":29},"no-unused-vars","'route' is defined but never used.","Identifier","unusedVar","'fullNameReg' is assigned a value but never used.","'emailReg' is assigned a value but never used.","'passwordReg' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'JobList' is defined but never used.","'REMOVE_JOB' is defined but never used."]